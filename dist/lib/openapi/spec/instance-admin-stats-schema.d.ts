import { FromSchema } from 'json-schema-to-ts';
export declare const instanceAdminStatsSchema: {
    readonly $id: "#/components/schemas/instanceAdminStatsSchema";
    readonly type: "object";
    readonly additionalProperties: false;
    readonly description: "Information about an instance and statistics about usage of various features of Unleash";
    readonly required: readonly ["instanceId"];
    readonly properties: {
        readonly instanceId: {
            readonly type: "string";
            readonly description: "A unique identifier for this instance. Generated by the database migration scripts at first run. Typically a UUID.";
            readonly example: "ed3861ae-78f9-4e8c-8e57-b57efc15f82b";
        };
        readonly timestamp: {
            readonly type: "string";
            readonly format: "date-time";
            readonly nullable: true;
            readonly description: "When these statistics were produced";
            readonly example: "2023-06-12T12:25:06Z";
        };
        readonly versionOSS: {
            readonly type: "string";
            readonly description: "The version of Unleash OSS that is bundled in this instance";
            readonly example: "5.1.7";
        };
        readonly versionEnterprise: {
            readonly type: "string";
            readonly description: "The version of Unleash Enterprise that is bundled in this instance";
            readonly example: "5.1.7";
        };
        readonly users: {
            readonly type: "number";
            readonly description: "The number of users this instance has";
            readonly example: 8;
            readonly minimum: 0;
        };
        readonly featureToggles: {
            readonly type: "number";
            readonly description: "The number of feature-toggles this instance has";
            readonly example: 47;
            readonly minimum: 0;
        };
        readonly projects: {
            readonly type: "number";
            readonly description: "The number of projects defined in this instance.";
            readonly example: 3;
            readonly minimum: 0;
        };
        readonly contextFields: {
            readonly type: "number";
            readonly description: "The number of context fields defined in this instance.";
            readonly example: 7;
            readonly minimum: 0;
        };
        readonly roles: {
            readonly type: "number";
            readonly description: "The number of roles defined in this instance";
            readonly example: 5;
            readonly minimum: 0;
        };
        readonly groups: {
            readonly type: "number";
            readonly description: "The number of groups defined in this instance";
            readonly example: 12;
            readonly minimum: 0;
        };
        readonly environments: {
            readonly type: "number";
            readonly description: "The number of environments defined in this instance";
            readonly example: 3;
            readonly minimum: 0;
        };
        readonly segments: {
            readonly type: "number";
            readonly description: "The number of segments defined in this instance";
            readonly example: 19;
            readonly minimum: 0;
        };
        readonly strategies: {
            readonly type: "number";
            readonly description: "The number of strategies defined in this instance";
            readonly example: 8;
            readonly minimum: 0;
        };
        readonly SAMLenabled: {
            readonly type: "boolean";
            readonly description: "Whether or not SAML authentication is enabled for this instance";
            readonly example: false;
        };
        readonly OIDCenabled: {
            readonly type: "boolean";
            readonly description: "Whether or not OIDC authentication is enabled for this instance";
            readonly example: true;
        };
        readonly clientApps: {
            readonly type: "array";
            readonly description: "A count of connected applications in the last week, last month and all time since last restart";
            readonly items: {
                readonly type: "object";
                readonly description: "An entry describing how many client applications has been observed over the defined range";
                readonly properties: {
                    readonly range: {
                        readonly type: "string";
                        readonly description: "A description of a time range";
                        readonly enum: readonly ["allTime", "30d", "7d"];
                        readonly example: "30d";
                    };
                    readonly count: {
                        readonly type: "number";
                        readonly description: "The number of client applications that have been observed in this period";
                        readonly example: 1;
                    };
                };
            };
        };
        readonly sum: {
            readonly type: "string";
            readonly description: "A SHA-256 checksum of the instance statistics to be used to verify that the data in this object has not been tampered with";
            readonly example: "b023323477abb1eb145bebf3cdb30a1c2063e3edc1f7ae474ed8ed6c80de9a3b";
        };
    };
    readonly components: {};
};
export declare type InstanceAdminStatsSchema = FromSchema<typeof instanceAdminStatsSchema>;
